.root .about-us {
  font-size: 1.5rem;
  color: var(--grey);
}
.root .about-us p.block-title {
  color: var(--main-color);
}
.root .about-us .about-p {
  margin-bottom: 2rem;
}
.root .about-us p {
  font-size: 1.3rem;
}
.form-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  background-color: #fff;
  height: 100%;
  padding: 2rem 0;
}
.form-container .contact-form {
  width: 75%;
}
.form-container input, .form-container textarea {
  width: 100%;
  margin-top: 2rem;
  border: none;
  border-bottom: 1px solid black;
  color: black;
}
.form-container .submit {
  border: 1px solid black;
  padding: 1rem;
  text-align: center;
  background-color: #fff;
  cursor: pointer;
}
.form-container .submit:hover {
  opacity: 0.6;
}
.contact-us {
  font-size: 1.5rem;
  background-color: var(--main-bg);
}
.contact-us i {
  color: var(--main-color);
}
.contact-us .contact-right {
  background-color: var(--main-color);
}
.contact-us .contact-details {
  color: #fff;
  border-top-color: var(--off-main-color) !important;
  border-bottom-color: var(--off-main-color) !important;
}
.contact-us .location-title {
  text-align: center;
  font-weight: 600;
  color: #fff;
}
.contact-us .contact-title1 {
  display: flex;
}
.contact-us .contact-title {
  text-align: center;
}
.contact-us .contact-sub {
  text-align: center;
  font-weight: 600;
}
.contact-us .address {
  display: flex;
  gap: 0.25rem;
  color: #fff;
  font-size: 0.9rem;
}
.contact-us hr {
  border-top: 1px solid var(--off-main-color);
}
.contact-us .register-now-btn {
  padding: 0.5rem 1rem !important;
  color: var(--main-color) !important;
  text-transform: capitalize !important;
}
.contact-us .register-now-btn:hover {
  color: white !important;
}
.contact-us .submit {
  color: var(--main-color);
}
/*DOCS: desktop first setup "max" */
/**
  usage:

  @use '../../lib/scss/media';
  @include media.mobile{
    padding: 0 .25rem;
    font-size: 1.5rem;
  }

*/
.root .conference {
  font-size: 1.5rem;
  background-color: var(--main-color);
}
.root .conference h2 {
  padding: 0 2rem;
  font-size: 60px !important;
}
.root .conference .row {
  color: black;
}
.root .conference .register-now-btn {
  color: var(--main-color);
}
.root .conference .register-now-btn:hover {
  color: var(--white);
}
.root .conference .register-now-btn:hover i {
  color: var(--white);
}
.root .conference .register-now-btn i {
  color: var(--main-color);
}
.root .conference .count-down .count-day {
  border-right: 1px solid var(--off-main-color);
}
.root .conference .count-down .count-day .count-number {
  border-bottom: 1px solid var(--off-main-color);
}
.root .conference .count-down .count-down-address {
  padding: 0 80px;
}
@media only screen and (max-width: 1199px) {
  .root .conference .count-down .count-down-address {
    padding: 0 55px;
  }
}
@media only screen and (max-width: 600px) {
  .root .conference .count-down .count-down-address {
    padding: 0 30px;
  }
}
.bottom-social {
  background-color: #000;
  font-size: 1.5rem;
}

.footer-top {
  background: var(--main-color);
  font-size: 1.5rem;
}

.footer-bottom {
  font-size: 1rem;
  background: #000;
  color: var(--main-color);
}

.footer-bottom a {
  color: var(--sunzao);
}
.footer-bottom a:active, .footer-bottom a:hover {
  color: #7f28c1;
}

.footer-right {
  padding-top: unset !important;
}
/* AT LEAST THIS TALL*/
.d3-fade-in {
  opacity: 1;
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
}

@keyframes fadeInOpacity {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fadeOutOpacity {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
.d3-fade-in-quick {
  opacity: 1;
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 0.5s;
}

.d3-fade-out-quick {
  opacity: 0;
  animation-name: fadeOutOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 0.5s;
}

.d3-fade-in {
  opacity: 1;
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
}

.d3-fade-delay-1 {
  /*opacity: 1;*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 1s;
  /*both makes opacity obsolete - uses both start and end keyframe*/
  animation-fill-mode: both;
}

.d3-fade-delay-2 {
  /*opacity: 1;*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 2s;
  /*both makes opacity obsolete - uses both start and end keyframe*/
  animation-fill-mode: both;
}

.d3-fade-delay-2-5 {
  /*opacity: 1;*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2.5s;
  animation-delay: 2.5s;
  /*both makes opacity obsolete - uses both start and end keyframe*/
  animation-fill-mode: both;
}

.d3-fade-delay-3 {
  /*opacity: 1;*/
  /*this does matter - its represents the starting opacity*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 3s;
  animation-fill-mode: both;
  /*represents the ending opacity*/
}

.d3-fade-delay-4 {
  /*opacity: 1;*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 4s;
  animation-fill-mode: both;
}

.d3-fade-delay-5 {
  /*opacity: 1;*/
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-delay: 5s;
  animation-fill-mode: both;
}

html {
  overscroll-behavior: contain;
}

body {
  height: 100vh;
}

.active-glow {
  border: 2px solid var(--active-blue) !important;
  box-shadow: 0px 0px 10px 1px var(--active-blue);
}

/***************** test rules **********************/
.test_yellow {
  border: 1px solid yellow !important;
}

.test_red {
  border: 1px solid red !important;
}

.test_blue {
  border: 1px solid blue !important;
}

.test_green {
  border: 1px solid green !important;
}

.test_purple {
  border: 1px solid purple !important;
}

.test_orange {
  border: 1px solid orange !important;
}

.test_brown {
  border: 1px solid brown !important;
}

.test_pink {
  border: 1px solid pink !important;
}

/***************** test rules **********************/
.clamp-1, .clamp-2, .clamp-3 {
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-box-orient: vertical;
  display: -webkit-box !important;
  display: block !important;
  line-height: 1.5;
}

.clamp-0 {
  white-space: nowrap;
  width: 50px;
  overflow: hidden;
  text-overflow: ellipsis;
}

.clamp-1 {
  -webkit-line-clamp: 1;
}

.clamp-2 {
  -webkit-line-clamp: 2;
}

.clamp-3 {
  -webkit-line-clamp: 3;
}

.word_wrap {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;
  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

/* styles for '...' */
.block-with-text {
  /* hide text if it more than N lines  */
  overflow: hidden;
  /* for set '...' in absolute position */
  position: relative;
  /* use this value to count block height */
  line-height: 1.2em;
  /* max-height = line-height (1.2) * lines max number (3) */
  max-height: 3.6em;
  /* fix problem when last visible word doesn't adjoin right side  */
  text-align: justify;
  /* place for '...' */
  margin-right: -1em;
  padding-right: 1.2em;
}

/* create the ... */
.block-with-text:before {
  /* points in the end */
  content: "...";
  /* absolute position */
  position: absolute;
  /* set position to right bottom corner of block */
  right: 0;
  bottom: 0;
}

/* hide ... if we have text, which is less than or equal to max lines */
.block-with-text:after {
  /* points in the end */
  content: "";
  /* absolute position */
  position: absolute;
  /* set position to right bottom corner of text */
  right: 0;
  /* set width and height */
  width: 1em;
  height: 1em;
  margin-top: 0.2em;
  /* bg color = bg color under block */
  background: white;
}

.bwt1 {
  max-height: 1.2em;
}

.bwt2 {
  max-height: 2.4em;
}

.bwt3 {
  max-height: 3.6em;
}

.chk_hidden_cont .fishBowl {
  max-width: 30rem !important;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.hide-scroll::-webkit-scrollbar, .hide_scroll::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE and Edge */
.hide-scroll, .hide_scroll {
  -ms-overflow-style: none;
}
/*DOCS: desktop first setup "max" */
/**
  usage:

  @use '../../lib/scss/media';
  @include media.mobile{
    padding: 0 .25rem;
    font-size: 1.5rem;
  }

*/
.root .home {
  font-size: 2rem;
}
.root .home .hero-image {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-bottom: 4rem;
}
.root .home .hero-image img {
  width: 80%;
}
.root .home .drawer-nav {
  overflow-y: auto;
  overflow-x: hidden;
}
.root .home .banner-title {
  padding: 0 2rem;
}
.root .home .banner-title h1, .root .home .banner-title h2, .root .home .banner-title h3 {
  color: var(--main-color);
}
.root .home .banner-title h1 {
  font-size: 48px;
}
.root .home .banner-title h2 {
  font-size: 32px;
}
.root .home .banner-title h3 {
  font-size: 24px;
}
.root .home .event-subtitle {
  text-transform: uppercase;
  font-family: "Montserrat-Light";
  color: var(--main-color);
}
.root .home .event-description strong {
  color: var(--main-color);
}
.root .home .register-now-btn {
  color: var(--white);
  background-color: var(--main-color);
}
.root .home .register-now-btn:hover {
  color: var(--main-color);
  background-color: var(--white);
}
.root .home .register-now-btn:hover i {
  color: var(--main-color);
}
.root .home .register-now-btn i {
  color: var(--white);
}
.root .home i {
  color: var(--main-color);
}
.root .home .top-social a:hover {
  color: var(--main-color);
}
.root .home .navbar.main-menu {
  display: none;
}
.root .home .main-menu .navbar-nav > li > a:hover {
  color: var(--main-color) !important;
}
.root .home .main-menu .navbar-nav > li > a:focus, .root .home .main-menu .navbar-nav > li > a:active {
  color: var(--main-color) !important;
}
.root .home .drawer-menu ul.sub-menu li a:hover, .root .home .drawer-menu ul.sub-menu li a:active, .root .home .drawer-menu ul.sub-menu li a:focus, .root .home .nav.navbar-nav ul.sub-menu li a:hover, .root .home .nav.navbar-nav ul.sub-menu li a:active, .root .home .nav.navbar-nav ul.sub-menu li a:focus {
  color: #ffffff;
  background-color: var(--main-color);
}
.root .home .drawer-menu .sub-menu, .root .home .nav.navbar-nav ul.sub-menu {
  border-top-color: var(--main-color);
}
.root .home .drawer-menu-item:hover {
  background-color: var(--main-color);
}
.root .home .header-left {
  color: var(--main-color);
}
@media only screen and (min-width: 1199px) {
  .root #NovEvt-home {
    padding-top: 3rem;
  }
  .root #NovEvt-home .hero-image {
    margin: 0 auto 2rem;
    width: 53%;
  }
  .root #NovEvt-home .hero-image img {
    /*width: 30%;*/
  }
  .root #NovEvt-home .banner-title h1 {
    font-size: 2.2rem;
    margin-bottom: 0.5rem;
  }
  .root #NovEvt-home .event-schedule {
    margin: 2rem 50px;
    padding: unset;
  }
  .root #NovEvt-home .event-description {
    font-size: 1.5rem;
    margin: 1rem auto;
    width: 61%;
  }
  .root #NovEvt-home .register-now-section {
    margin: 2rem;
  }
  .root #NovEvt-home .register-now-section a {
    padding: 1rem;
  }
}
@media only screen and (max-width: 1199px) {
  .root .banner-title h1 {
    font-size: 40px !important;
  }
}
@media only screen and (max-width: 800px) {
  .root .banner-title h1 {
    font-size: 32px !important;
  }
}

.drawer--left.drawer-open .drawer-hamburger {
  background-color: var(--main-color) !important;
}
.drawer--left.drawer-open .drawer-hamburger-icon {
  background-color: var(--main-color);
}
.drawer--left.drawer-open .drawer-hamburger-icon:after, .drawer--left.drawer-open .drawer-hamburger-icon:before {
  background-color: var(--white);
}
.drawer--left .drawer-hamburger-icon {
  background-color: var(--main-color);
}
.drawer--left .drawer-hamburger-icon:after, .drawer--left .drawer-hamburger-icon:before {
  background-color: var(--main-color);
}

.header-image {
  width: 5rem;
  left: 1rem;
  position: fixed;
  background-color: #000;
  z-index: 104;
}
@media only screen and (min-width: 1199px) {
  .header-image {
    width: 13rem;
  }
}
@media only screen and (max-width: 1199px) {
  .header-image {
    width: 11rem;
  }
}
@media only screen and (max-width: 800px) {
  .header-image {
    width: 9rem;
  }
}
.sponsors {
  font-size: 1.5rem;
}
.sponsors h2 {
  color: var(--main-color) !important;
}
.sponsors .styles-button {
  cursor: pointer;
  color: var(--main-color) !important;
}
.sponsors .styles-button i {
  color: var(--main-color) !important;
}

html {
  overscroll-behavior: contain;
}

.snapBox {
  /*snap_ctrls*/
  /*snap_cont*/
}
.snapBox.orientation_ctrls {
  display: grid !important;
  grid-template-areas: "left center right" "bottom bottom bottom";
  grid-template-columns: auto 9fr auto;
  grid-template-rows: 9fr auto;
}
.snapBox.orientation_ctrls .snap_cont {
  grid-area: center;
}
.snapBox.orientation_ctrls .snap_ctrls {
  border-radius: 10px;
  background: #e9ecef;
  padding: 5px;
  width: 40px;
  grid-template-areas: "left" "main" "right" !important;
  grid-template-rows: auto 9fr auto;
}
.snapBox.orientation_ctrls .snap_ctrls .snap_ctrls_left {
  align-items: flex-start !important;
}
.snapBox.orientation_ctrls .snap_ctrls .snap_ctrls_left .user_menu {
  /*margin-top: .2rem;*/
}
.snapBox.orientation_ctrls .snap_ctrls .snap_ctrls_main {
  flex-flow: column;
  gap: 1rem;
  width: unset !important;
  margin: unset !important;
}
.snapBox.orientation_ctrls .snap_ctrls .snap_ctrls_main .snap_profile {
  margin: 0 0.5rem !important;
}
.snapBox.orientation_ctrls .snap_ctrls .snap_ctrls_right {
  flex-flow: column nowrap;
}
.snapBox.orientation_ctrls .snap_ctrls div.snap_btn {
  margin: unset !important;
}
.snapBox.orientation_ctrls.left .snap_ctrls {
  grid-area: left;
}
.snapBox.orientation_ctrls.right .snap_ctrls {
  grid-area: right;
}
.snapBox.orientation_ctrls.left .snap_ctrls, .snapBox.orientation_ctrls.right .snap_ctrls {
  height: 100%;
}
.snapBox.orientation_ctrls.left .snap_ctrls_main, .snapBox.orientation_ctrls.right .snap_ctrls_main {
  margin: 1rem 0 !important;
}
.snapBox .snap_ctrls {
  display: flex;
  justify-content: space-around;
  min-height: 0;
  /**/
}
.snapBox .snap_ctrls .snap_btn {
  border-radius: 0px;
  height: 1.75em;
  line-height: 1.5;
}
.snapBox .snap_ctrls .snap_btn.dots {
  border-radius: 50% !important;
  width: 1.5rem !important;
  height: 1.5rem !important;
  flex: unset !important;
}
.snapBox .snap_ctrls .snap_btn.dots.active {
  background-color: var(--active-blue) !important;
}
.snapBox .snap_ctrls .snap_btn:hover {
  transform: scale(1.2);
}
.snapBox .snap_ctrls .snap_btn.active {
  color: white !important;
  transform: unset;
}
.snapBox .snap_ctrls .snap_profile {
  height: 35px;
  width: 35px;
  cursor: pointer;
}
.snapBox .snap_ctrls .snap_profile .image_area {
  height: 100%;
  width: 100%;
}
.snapBox .snap_ctrls .snap_profile .snap_profile_icon {
  font-size: 1.6rem !important;
}
.snapBox .snap_ctrls .snap_profile .d3-profile-rounded {
  border-width: 2px !important;
}
.snapBox .snap_ctrls .snap_profile img, .snapBox .snap_ctrls .snap_profile canvas {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.snapBox .snap_cont {
  width: 100%;
  min-height: 20rem;
  border: 1px solid #ddd;
  -ms-overflow-style: none;
  /* Hide scrollbar for IE and Edge */
  /*snap_section*/
}
.snapBox .snap_cont::-webkit-scrollbar {
  display: none;
}
.snapBox .snap_cont.scroll {
  display: flex;
  flex-flow: row nowrap;
  scroll-snap-type: x mandatory;
  -webkit-overflow-scrolling: touch;
  overflow-x: scroll;
  overflow-y: hidden;
}
.snapBox .snap_cont .snap_section {
  /*width: 100%;*/
  height: 100%;
  scroll-snap-align: center;
  overflow-y: auto;
  scroll-snap-stop: always;
  /*.tabs*/
}
.snapBox .snap_cont .snap_section.scroll {
  flex: 1 0 100%;
}
.snapBox .snap_cont .snap_section.tabs {
  display: none;
  width: auto;
}
.snapBox .snap_cont .snap_section.tabs.show {
  display: block;
}

/*snapBox*/
.snap_profile {
  height: 35px !important;
  width: 35px;
  flex: 0 0 2.2rem;
  cursor: pointer;
  margin: 5px !important;
}
.snap_profile .image_area {
  height: 100%;
  width: 100%;
}
.snap_profile .snap_profile_icon {
  font-size: 1.6rem !important;
}
.snap_profile .d3-profile-rounded {
  border-width: 2px !important;
}
.snap_profile img, .snap_profile canvas {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.snap_dyn_ctrls {
  font-size: 1.5rem;
}

.snapBox.snap_core .snap_ctrls.grid, .arc_footer .snap_ctrls.grid {
  display: grid;
  grid-template-areas: "left main right";
  grid-template-columns: 1fr 5fr 1fr;
  margin: 0 0.5rem;
  min-height: 0;
}
.snapBox.snap_core .snap_ctrls.grid .snap_ctrls_main, .arc_footer .snap_ctrls.grid .snap_ctrls_main {
  display: flex;
  grid-area: main;
  align-items: center;
  overflow: auto;
  width: 15.3rem;
  margin: 0 auto;
}
.snapBox.snap_core .snap_ctrls.grid .snap_ctrls_main.left, .arc_footer .snap_ctrls.grid .snap_ctrls_main.left {
  justify-content: flex-start;
}
.snapBox.snap_core .snap_ctrls.grid .snap_ctrls_main.center, .arc_footer .snap_ctrls.grid .snap_ctrls_main.center {
  justify-content: center;
}
.snapBox.snap_core .snap_ctrls.grid .snap_ctrls_left, .arc_footer .snap_ctrls.grid .snap_ctrls_left {
  grid-area: left;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.snapBox.snap_core .snap_ctrls.grid .snap_ctrls_right, .arc_footer .snap_ctrls.grid .snap_ctrls_right {
  grid-area: right;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.snapBox.snap_core .snap_ctrls.grid .snap_btn, .arc_footer .snap_ctrls.grid .snap_btn {
  border: unset;
  font-size: 1.5rem;
  background-color: unset;
  margin: 0 0.5rem !important;
  height: unset;
  line-height: normal !important;
  color: #545454;
}
.snapBox.snap_core .snap_ctrls.grid .snap_btn.active, .arc_footer .snap_ctrls.grid .snap_btn.active {
  color: #2d2dad !important;
}

.charcoal.snap_core_snap_ctrls {
  justify-content: center;
  background-color: #676363;
  border-radius: 7px 7px 25px 25px;
}
.charcoal.snap_core_snap_ctrls .snap_btn {
  color: #fff;
}
/*DOCS: desktop first setup "max" */
/**
  usage:

  @use '../../lib/scss/media';
  @include media.mobile{
    padding: 0 .25rem;
    font-size: 1.5rem;
  }

*/
* {
  box-sizing: border-box;
}

.register_view_modal_cont .register_view_modal .register_view_content .rForm_display_select_btn, .register_view_modal_cont .register_view_modal .register_view_content .rForm_display_preview_btn {
  position: absolute;
  top: 1.7rem;
  font-size: 1.3rem;
}

.register_view_modal_cont {
  padding-top: 1rem !important;
}
.register_view_modal_cont .register_view_modal {
  margin-top: 1rem !important;
  max-width: 50rem !important;
  max-height: 90vh !important;
}
.register_view_modal_cont .register_view_modal .register_view_content {
  min-height: 25rem;
  max-height: 85vh;
  overscroll-behavior: contain;
}
.register_view_modal_cont .register_view_modal .register_view_content * {
  color: #000;
}
.register_view_modal_cont .register_view_modal .register_view_content .snap_ctrls.grid {
  grid-template-columns: auto 5fr 1fr !important;
}
.register_view_modal_cont .register_view_modal .register_view_content .snap_ctrls_main {
  padding: 0.25rem 0;
  width: 100% !important;
}
.register_view_modal_cont .register_view_modal .register_view_content .snap_core_snap_cont {
  border: unset;
}
.register_view_modal_cont .register_view_modal .register_view_content .reg_icon.hidden {
  display: none;
}
.register_view_modal_cont .register_view_modal .register_view_content .rForm_display_preview_btn {
  right: 2rem;
}
.register_view_modal_cont .register_view_modal .register_view_content .rForm_display_select_btn {
  left: 2rem;
}

.rSelect_wrapper {
  display: flex;
  flex-flow: column nowrap;
}
.rSelect_wrapper .rSelect_inner {
  display: grid;
  grid-template-areas: "contractor ." "agency ." "general ." "applicant .";
  grid-template-columns: 5fr 1fr;
  padding: 0.5rem;
  gap: 1rem;
  flex-flow: column nowrap;
}
.rSelect_wrapper .rSelect_inner .contractor {
  grid-area: contractor;
}
.rSelect_wrapper .rSelect_inner .agency {
  grid-area: agency;
}
.rSelect_wrapper .rSelect_inner .general {
  grid-area: general;
}
.rSelect_wrapper .rSelect_inner .applicant {
  grid-area: applicant;
}
.rSelect_wrapper .rSelect_inner .rSelect_dnld {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  border-radius: 0.5rem;
  border: 3px solid var(--main-color);
  color: var(--main-color);
  padding: unset;
  text-decoration: none;
}
@media only screen and (max-width: 800px) {
  .rSelect_wrapper .rSelect_inner .rSelect_dnld {
    padding: 0 0.25rem;
  }
}
@media only screen and (max-width: 600px) {
  .rSelect_wrapper .rSelect_inner .rSelect_dnld {
    padding: 0 0.25rem;
    font-size: 1.5rem;
  }
}
.rSelect_wrapper .rSelect_inner .rSelect_dnld p {
  margin-bottom: 0.5rem;
  font-size: 0.6em;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}
.rSelect_wrapper .rSelect_inner .sTree_link_content.active {
  background-color: var(--main-color);
}
.rSelect_wrapper .rSelect_inner .sTree_link_content.active .sTree_link_title {
  color: white;
  text-shadow: 2px 2px 2px #323131;
}
.rSelect_wrapper .rSelect_inner .sTree_link_content.active .sTree_link_desc {
  color: #ccc;
}

.rHead.ProfileIcon_icon_wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
}
.rHead.ProfileIcon_icon_wrapper .rHead_icon_img_image_area {
  width: 12rem;
  height: 7rem;
}
.rHead.ProfileIcon_icon_wrapper .rHead_icon_img_image_area img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.rHead_title {
  text-align: center;
  text-shadow: 2px 2px 2px #ccc;
  text-transform: uppercase;
}

.rHead_sub {
  text-align: center;
  font-style: italic;
  margin-bottom: 2rem;
}

.rForm .rHead_icon_img_image_area {
  width: 8rem !important;
  height: 4rem !important;
}
.rForm .rHead_title {
  font-size: 1rem;
  margin-bottom: 1rem;
}
.rForm .rInfo_info_menu {
  padding: 0 4rem 1rem;
}
@media only screen and (max-width: 600px) {
  .rForm .rInfo_info_menu {
    padding: 0 2rem 1rem;
  }
}
.rForm .rForm_active, .rForm .rForm_option {
  border-radius: 7px;
  border: 3px solid var(--main-color);
  margin: 0 2.5rem 1rem;
  font-weight: 600;
  padding: 0.25rem;
  text-transform: uppercase;
  text-align: center;
}
@media only screen and (max-width: 600px) {
  .rForm .rForm_active, .rForm .rForm_option {
    margin: 0 0.5rem 1rem;
  }
}
.rForm fieldset {
  padding: 0 0.5rem;
  margin: unset;
}
@media only screen and (max-width: 600px) {
  .rForm fieldset {
    padding: 0 1rem;
  }
}
.rForm .w3-row fieldset:only-child {
  width: 100% !important;
}
.rForm .rForm_form label {
  text-transform: capitalize;
}
.rForm .rForm_mask {
  text-align: center;
  font-weight: bold;
  padding-bottom: 0.5rem;
}
.rForm .rForm_submit_cont {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 1rem;
  border-top: 1px solid #ccc;
  bottom: -1px;
}
.rForm .rForm_submit_cont .rForm_submit {
  background: var(--main-color);
  color: var(--white);
  width: 80%;
  border-radius: 1rem;
}

.register-profile-icon {
  display: none !important;
}

.rInfo_wrapper {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  margin-bottom: 1rem;
}
.rInfo_wrapper .rInfo_details {
  font-size: 0.8rem;
  margin-bottom: 1rem;
}

.rList_wrapper {
  padding: 1rem;
}
.rList_wrapper .rForm_option {
  text-transform: capitalize !important;
}
.rList_wrapper .rList_add_cont {
  display: flex;
  justify-content: flex-end;
}
.rList_wrapper .rList_add_cont .rList_add {
  display: flex;
  justify-content: space-evenly;
  width: auto;
  gap: 0.5rem;
  padding: 0.5rem 2rem;
  background: #ccc;
  border-radius: 1rem;
}
.rList_wrapper .rList_delete {
  font-size: 1.5rem;
  cursor: pointer;
}

.rRes_wrapper {
  padding: 1rem;
}
.rRes_wrapper .rRes_option {
  text-transform: capitalize;
}
.rRes_wrapper .rRes_sub {
  font-size: 0.9rem;
}

.rRes_cont {
  display: flex;
  flex-flow: row wrap;
}
.rRes_cont .res_check, .rRes_cont .edu_check, .rRes_cont .gen_check {
  flex: 0 33%;
}
@media only screen and (max-width: 600px) {
  .rRes_cont .res_check, .rRes_cont .edu_check, .rRes_cont .gen_check {
    flex: 0 50%;
  }
}
.rRes_cont .res_check .form-group, .rRes_cont .edu_check .form-group, .rRes_cont .gen_check .form-group {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 0.5rem;
}
.rRes_cont .res_check .form-group input, .rRes_cont .edu_check .form-group input, .rRes_cont .gen_check .form-group input {
  width: 1.5rem;
  box-shadow: unset;
  min-width: 1.5em;
}
.rRes_cont .res_check .form-group label, .rRes_cont .edu_check .form-group label, .rRes_cont .gen_check .form-group label {
  font-weight: 400;
  font-size: 0.9rem;
  margin: unset;
}
.rRes_cont .res_txt label, .rRes_cont .edu_txt label, .rRes_cont .gen_txt label {
  margin: 0.75rem 0 0.25rem;
  font-weight: 500;
  font-size: 0.9rem;
}

.rStart_inner {
  display: grid;
  grid-template-areas: "intro intro" "step1 step2" "btn btn" "count count" "other other";
  grid-template-rows: auto auto auto auto auto;
  padding: 0.5rem 2rem;
  gap: 0.5rem;
}
.rStart_inner .intro {
  grid-area: intro;
  padding: 0 2rem;
  margin-bottom: 0.5rem;
}
.rStart_inner .intro.success {
  color: green;
  font-weight: 600;
  text-align: center;
}
.rStart_inner .intro.failure {
  color: red;
  font-weight: 600;
  text-align: center;
}
.rStart_inner .step1_cont {
  grid-area: step1;
}
.rStart_inner .step2_cont {
  grid-area: step2;
}
.rStart_inner .step_cont {
  display: flex;
  flex-flow: column nowrap;
  border-radius: 0.8rem;
  border: 1px solid #ccc;
  padding: 0.5rem 0;
  margin: 0 clamp(0.25rem, 2vw, 2rem);
}
.rStart_inner .step_cont .step_label {
  text-align: center;
}
.rStart_inner .step_cont .step_icon {
  font-size: clamp(5rem, 18vw, 8rem);
  padding: clamp(0.25rem, 1vh, 1rem) clamp(0.25rem, 2vw, 2rem);
  text-align: center;
  border-radius: 0.8rem;
  align-self: center;
  color: #9e9e9e;
  width: unset;
}
.rStart_inner .step_cont .step_icon:after {
  width: clamp(5rem, 18vw, 8rem);
  height: clamp(5rem, 18vw, 8rem);
  background-size: clamp(5rem, 18vw, 8rem);
}
.rStart_inner .step_cont .step_access {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  height: clamp(5rem, 21vw, 8.5rem);
}
.rStart_inner .step_cont .step_access * {
  text-align: center;
  margin: unset;
}
.rStart_inner .step_cont .step_access h3 {
  font-size: clamp(1rem, 5vw, 2.2rem);
  text-shadow: 2px 2px 2px #ccc;
}
.rStart_inner .step_cont .step_info {
  text-align: center;
  color: var(--main-color);
  font-weight: 600;
}
.rStart_inner .start-btn {
  grid-area: btn;
  background-color: var(--main-color);
  color: var(--main-text-color) !important;
  font-weight: 600;
  border-radius: 0.7rem;
  margin: 0.5rem;
}
.rStart_inner .foot_txt {
  margin: unset;
  text-align: center;
}
.rStart_inner .countdown {
  grid-area: count;
}
.rStart_inner .otherwise {
  grid-area: other;
  font-size: 0.8rem;
  font-style: italic;
}

.icon_btn:after, .svg_btn:after {
  content: "";
  display: block;
  width: clamp(5rem, 18vw, 8rem);
  height: clamp(5rem, 18vw, 8rem);
  /* background-color: rgba(0,0,0,.3); */
  background-position: center center;
  background-repeat: no-repeat;
  -webkit-border-radius: 1em;
  background-size: clamp(5rem, 18vw, 8rem);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/